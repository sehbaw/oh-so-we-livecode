sound("bd bd hh bd rim bd oh bd").cpm(40)






-- basic code for messing around w/filters, 
// https://splice.com/sounds/search/samples?filepath=vaporwave&filepath

note("a3 c#4 e4 a4")
  //note("[a3 c#4 e4 a4]/2")
.s("sawtooth")
   .s("gm_voice_oohs", "gm_synth_choir")
   .s("gm_fx_soundtrack")
 //  .s("gm_synth_choirs")
  //.s("gm_recorder")
.cutoff(700)
.delay(0.5)
.room(0.2)



// rhythm doodle 

stack(
  s(`hh hh hh [hh*4],
     perc ~ [cp oh],
     bd bd [bd*3]
  `).bank("RolandTR505"),
).room(0.6)
 .cpm(40)
 .delay(0.3)

// basic sample 
sound("bd*2,<white pink brown white pink>*8" )
.decay(.04).sustain(0).scope()



// syncing with hydra example

await initHydra()

let pattern = "[[1,5 ~ ] 1 <5 3> [<[8,7] 8> 1]] / 2";

stack(
  s("bd [bd cp hh*2]").bank('YamahaRM50'),
  s("hh hh oh").bank('YamahaRM50'),
  s("[bd ~ cp] * 2").bank('SequentialCircuitsDrumtracks'),
  n(pattern).scale("C:locrian").clip(2).s("gm_distortion_guitar"),
  n("[c5 ~ ~ ~ ~ ~] / 6").s("gm_bird_tweet")
).room(0.6)
 .echo(3, 1/6, 0.3);


// licensed with CC BY-NC-SA 4.0 https://creativecommons.org/licenses/by-nc-sa/4.0/
// by Rodrigo Velasco
// https://yecto.github.io/
// Original link: https://hydra.ojack.xyz/?sketch_id=example_9

osc(H(pattern), 0.1, 0).color(H(pattern), 0.1, 2)
.mult(osc(H(pattern), 0.01, 0)).repeat(2, 20).rotate(0.5).modulate(o1)
.scale(1, () =>  (a.fft[0]*0.9 + 2)).diff(o1).out(o0)
osc(20, 0.2, 0).color(2, 0.7, 0.1).mult(osc(40)).modulateRotate(o0, 0.2)
.rotate(0.2).out(o1)


await initHydra()

let pattern = "1 <2 3 4> 5 <4 3 2>, [1, 3, 7]";

// licensed with CC BY-NC-SA 4.0 https://creativecommons.org/licenses/by-nc-sa/4.0/

//clouds of passage
//by Nesso
//www.nesso.xyz

shape([4,5,6].fast(0.1).smooth(1),0.000001,[0.2,0.7].smooth(1))
.color(0.2,0.4,0.3)
.scrollX(()=>Math.sin(time*0.27))
.add(
  shape([4,5,6].fast(0.1).smooth(1),0.000001,[0.2,0.7,0.5,0.3].smooth(1))
  .color(0.6,0.2,0.5)
  .scrollY(0.35)
  .scrollX(()=>Math.sin(time*0.33)))
.add(
  shape([4,5,6].fast(0.1).smooth(1),0.000001,[0.2,0.7,0.3].smooth(1))
  .color(0.2,0.4,0.6)
  .scrollY(-0.35)
  .scrollX(()=>Math.sin(time*0.41)*-1))
.add(
      src(o0).shift(0.001,0.01,0.001)
      .scrollX([0.05,-0.05].fast(0.1).smooth(1))
      .scale([1.05,0.9].fast(0.3).smooth(1),[1.05,0.9,1].fast(0.29).smooth(1))
      ,0.85)
.modulate(voronoi(H(pattern),2,2))
.out()

let chordProg = "<Em Gm Fm Em Eb D G Fm>" //"<Bm A G D7 G Cm Em7 D7>";

stack(
  n("0 4 5 4 0 5 3 5, [0, 3, 5]").chord(chordProg).anchor("F#2").voicing()
   .sound("gm_dulcimer").legato(1.5).room(0.6),
  sound("mt*4, cp [~ bd] oh <~ ~ ~ cr>").bank("SequentialCircuitsTom").decay(0.6).room(1.8),
  n("0 [0, 4, 5] ~ <~ ~ ~ [8 12]>").chord(chordProg).anchor("F#6").voicing()
    .sound("gm_fx_sci_fi").legato(1).room(2),
  n("0 8 7 8").chord(chordProg).anchor("F#1").voicing()
    .sound('gm_electric_bass_finger').gain(1.2),
  n("~ [0, 3, 5, 12]").chord(chordProg).anchor("B3").voicing()
    .sound("gm_choir_aahs").gain(1.2).legato(1.5).room(3)
);
